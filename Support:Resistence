// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© HeWhoMustNotBeNamed

//@version=5
indicator('Multi ZZ - Support/Resistence', shorttitle='Support/Resistence - ZZ', overlay=true, max_bars_back=500, max_lines_count=500, max_labels_count=500)
max_array_size = 200

bars_to_keep = input.int(100, title='Loopback', step=100, maxval=5000, group='SR')
minPivotCount = input.int(10, title='Min Pivots', step=5, minval=5, maxval=50, group='SR')
atrLength = input.int(22, title='ATR Length (Merging)', step=5, group='SR')
atrMult = input.float(0.5, title='ATR Multiplier (Merging)', step=0.1, minval=0.2, group='SR')

waitForConfirmation = true

showZigZag1 = input.bool(true, title='L1 Length', group='Zigzag-1', inline='main')
zigzag1Length = input.int(3, step=5, minval=3, title='', group='Zigzag-1', inline='main')

showZigZag11 = input.bool(true, title='L2 Length', group='Zigzag-1', inline='sub')
zigzag1SubLength = input.int(2, step=2, minval=2, title='', group='Zigzag-1', inline='sub')

showZigZag2 = input.bool(true, title='L1 Length', group='Zigzag-2', inline='main')
zigzag2Length = input.int(5, step=5, minval=3, title='', group='Zigzag-2', inline='main')

showZigZag21 = input.bool(true, title='L2 Length', group='Zigzag-2', inline='sub')
zigzag2SubLength = input.int(2, step=2, minval=2, title='', group='Zigzag-2', inline='sub')

showZigZag3 = input.bool(true, title='L1 Length', group='Zigzag-3', inline='main')
zigzag3Length = input.int(8, step=5, minval=3, title='', group='Zigzag-3', inline='main')

showZigZag31 = input.bool(true, title='L2 Length', group='Zigzag-3', inline='sub')
zigzag3SubLength = input.int(2, step=2, minval=2, title='', group='Zigzag-3', inline='sub')

showZigZag4 = input.bool(true, title='L1 Length', group='Zigzag-4', inline='main')
zigzag4Length = input.int(13, step=5, minval=3, title='', group='Zigzag-4', inline='main')

showZigZag41 = input.bool(true, title='L2 Length', group='Zigzag-4', inline='sub')
zigzag4SubLength = input.int(2, step=2, minval=2, title='', group='Zigzag-4', inline='sub')

var zigzagpivots1 = array.new_float(0)
var zigzagpivotbars1 = array.new_int(0)
var zigzagpivotdirs1 = array.new_int(0)

var zigzagpivots2 = array.new_float(0)
var zigzagpivotbars2 = array.new_int(0)
var zigzagpivotdirs2 = array.new_int(0)

var zigzagpivots3 = array.new_float(0)
var zigzagpivotbars3 = array.new_int(0)
var zigzagpivotdirs3 = array.new_int(0)

var zigzagpivots4 = array.new_float(0)
var zigzagpivotbars4 = array.new_int(0)
var zigzagpivotdirs4 = array.new_int(0)

var zigzagpivots11 = array.new_float(0)
var zigzagpivotbars11 = array.new_int(0)
var zigzagpivotdirs11 = array.new_int(0)

var zigzagpivots21 = array.new_float(0)
var zigzagpivotbars21 = array.new_int(0)
var zigzagpivotdirs21 = array.new_int(0)

var zigzagpivots31 = array.new_float(0)
var zigzagpivotbars31 = array.new_int(0)
var zigzagpivotdirs31 = array.new_int(0)

var zigzagpivots41 = array.new_float(0)
var zigzagpivotbars41 = array.new_int(0)
var zigzagpivotdirs41 = array.new_int(0)


var rsPivot = array.new_float(0)
var rsPivotBar = array.new_int(0)
var rsCount = array.new_int(0)
var rsZLen = array.new_int(0)
var rsZSubLen = array.new_int(0)

pivots(length) =>
    float phigh = ta.highestbars(high, length) == 0 ? high : na
    float plow = ta.lowestbars(low, length) == 0 ? low : na
    dir = 0
    iff_1 = plow and na(phigh) ? -1 : dir[1]
    dir := phigh and na(plow) ? 1 : iff_1
    [dir, phigh, plow, bar_index, bar_index]

outerpivots(startIndex, length, zigzagpivots, zigzagpivotbars) =>
    zigzagminimal = array.slice(zigzagpivots, startIndex, length - 1)
    lastPivot = array.get(zigzagpivots, startIndex)
    lastPivotBar = array.get(zigzagpivotbars, startIndex)
    highestPivot = array.max(zigzagminimal)
    lowestPivot = array.min(zigzagminimal)
    float phigh = lastPivot == highestPivot ? lastPivot : na
    float plow = lastPivot == lowestPivot ? lastPivot : na
    int phighbar = lastPivot == highestPivot ? lastPivotBar : na
    int plowbar = lastPivot == lowestPivot ? lastPivotBar : na
    zdir = 0
    iff_1 = plow and na(phigh) ? -1 : zdir[1]
    zdir := phigh and na(plow) ? 1 : iff_1
    [zdir, phigh, plow, phighbar, plowbar]


add_to_sr_pivot(pivot, pivotBar, zzLen, zzSubLen) =>
    count = 0
    value = pivot
    atr = ta.atr(atrLength) * atrMult
    if array.size(rsPivotBar) > 0
        for i = 0 to array.size(rsPivotBar) - 1 by 1
            xPivotBar = array.get(rsPivotBar, i)
            xPivot = array.get(rsPivot, i)
            if pivotBar == xPivotBar or math.abs(xPivot - pivot) <= atr
                count := array.get(rsCount, i) + 1
                array.remove(rsPivot, i)
                array.remove(rsPivotBar, i)
                array.remove(rsCount, i)
                xLen = array.remove(rsZLen, i)
                xSubLen = array.remove(rsZSubLen, i)
                if xLen > zzLen or xLen == zzLen and xSubLen > zzSubLen
                    value := (3 * xPivot + 2 * pivot) / 5
                    value
                else
                    value := (2 * xPivot + 3 * pivot) / 5
                    value
                break
    array.unshift(rsPivot, pivot)
    array.unshift(rsPivotBar, pivotBar)
    array.unshift(rsCount, count)
    array.unshift(rsZLen, zzLen)
    array.unshift(rsZSubLen, zzSubLen)


remove_from_pivot(pivot, pivotBar) =>
    pivotFound = false
    if array.size(rsPivotBar) > 0
        for i = 0 to array.size(rsPivotBar) - 1 by 1
            xPivotBar = array.get(rsPivotBar, i)
            if pivotBar == xPivotBar
                count = array.get(rsCount, i)
                if count <= 1
                    array.remove(rsPivot, i)
                    array.remove(rsPivotBar, i)
                    array.remove(rsCount, i)
                    array.remove(rsZLen, i)
                    array.remove(rsZSubLen, i)
                    pivotFound := true
                    pivotFound
                else
                    array.set(rsCount, i, count - 1)
                    pivotFound := true
                    pivotFound
                break
    pivotFound


zigzagcore(dir, phigh, plow, phighbar, plowbar, zigzagpivots, zigzagpivotbars, zigzagpivotdirs, zzLen, zzSubLen) =>
    dirchanged = ta.change(dir)
    newZG = false
    if phigh or plow
        value = dir == 1 ? phigh : plow
        bar = phigh ? phighbar : plowbar
        newDir = dir
        if not dirchanged and array.size(zigzagpivots) >= 1
            pivot = array.shift(zigzagpivots)
            pivotbar = array.shift(zigzagpivotbars)
            pivotdir = array.shift(zigzagpivotdirs)
            remove_from_pivot(pivot, pivotbar)
            useNewValues = value * pivotdir < pivot * pivotdir
            value := useNewValues ? pivot : value
            bar := useNewValues ? pivotbar : bar
            bar

        if array.size(zigzagpivots) >= 2
            LastPoint = array.get(zigzagpivots, 1)
            newDir := dir * value > dir * LastPoint ? dir * 2 : dir
            newDir

        array.unshift(zigzagpivots, value)
        array.unshift(zigzagpivotbars, bar)
        array.unshift(zigzagpivotdirs, newDir)
        add_to_sr_pivot(value, bar, zzLen, zzSubLen)
        newZG := true
        if array.size(zigzagpivots) > max_array_size
            pivot = array.pop(zigzagpivots)
            pivotbar = array.pop(zigzagpivotbars)
            pivotdir = array.pop(zigzagpivotdirs)
            remove_from_pivot(pivot, pivotbar)
    newZG

zigzag(length, zigzagpivots, zigzagpivotbars, zigzagpivotdirs) =>
    [dir, phigh, plow, phighbar, plowbar] = pivots(length)
    zigzagcore(dir, phigh, plow, phighbar, plowbar, zigzagpivots, zigzagpivotbars, zigzagpivotdirs, length, 0)

outerzigzag(zigzagLength, outerzigzagLength, zigzagpivots, zigzagpivotbars, outerzigzagpivots, outerzigzagpivotbars, outerzigzagpivotdirs) =>
    newOuterZG = false
    startIndex = waitForConfirmation ? 1 : 0
    if array.size(zigzagpivots) >= outerzigzagLength * 2 + startIndex
        [zdir, phigh, plow, phighbar, plowbar] = outerpivots(startIndex, outerzigzagLength * 2 + startIndex, zigzagpivots, zigzagpivotbars)
        newOuterZG := zigzagcore(zdir, phigh, plow, phighbar, plowbar, outerzigzagpivots, outerzigzagpivotbars, outerzigzagpivotdirs, zigzagLength, outerzigzagLength)
        newOuterZG
    newOuterZG

cleanOldPivots() =>
    if array.size(rsPivot) > 0
        i = array.size(rsPivot) - 1
        barIndex = array.get(rsPivotBar, i)
        if bar_index - barIndex > bars_to_keep
            array.remove(rsPivot, i)
            array.remove(rsPivotBar, i)
            array.remove(rsCount, i)

ZG1 = zigzag(zigzag1Length, zigzagpivots1, zigzagpivotbars1, zigzagpivotdirs1)
oZG1 = outerzigzag(zigzag1Length, zigzag1SubLength, zigzagpivots1, zigzagpivotbars1, zigzagpivots11, zigzagpivotbars11, zigzagpivotdirs11)
ZG2 = zigzag(zigzag2Length, zigzagpivots2, zigzagpivotbars2, zigzagpivotdirs2)
oZG2 = outerzigzag(zigzag2Length, zigzag2SubLength, zigzagpivots2, zigzagpivotbars2, zigzagpivots21, zigzagpivotbars21, zigzagpivotdirs21)
ZG3 = zigzag(zigzag3Length, zigzagpivots3, zigzagpivotbars3, zigzagpivotdirs3)
oZG3 = outerzigzag(zigzag3Length, zigzag3SubLength, zigzagpivots3, zigzagpivotbars3, zigzagpivots31, zigzagpivotbars31, zigzagpivotdirs31)
ZG4 = zigzag(zigzag4Length, zigzagpivots4, zigzagpivotbars4, zigzagpivotdirs4)
oZG4 = outerzigzag(zigzag4Length, zigzag4SubLength, zigzagpivots4, zigzagpivotbars4, zigzagpivots41, zigzagpivotbars41, zigzagpivotdirs41)

cleanOldPivots()

if barstate.islast
    if array.size(rsPivotBar) > 0
        for i = 0 to array.size(rsPivotBar) - 1 by 1
            price = array.get(rsPivot, i)
            count = array.get(rsCount, i)
            if count > minPivotCount
                lineWidth = (count - minPivotCount + 1) / minPivotCount + 1
                line.new(bar_index - 10, price, bar_index, price, extend=extend.both, color=price < close ? color.green : color.red, style=line.style_dashed, width=lineWidth)
