// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Duyck
//@version=5

// This simple indicator gives you a bias on the market that can be used as a filter, an entry indicator for pullbacks,...
//
// Enjoy!
// JD.
//
// #NotTradingAdvice
// #DYOR

indicator('RSI direction bias - JD')
// Inputs
//{
src             = input.source(        ohlc4, title = 'source')
rsi_type        = input.string('regular rsi', title = 'rsi type', options = ['regular rsi', 'future smoothed rsi'])
len             = input.int   (           14, title = 'rsi length')
top_level       = input.float (           60, title = ' top level')
bottom_level    = input.float (           40, title = 'bottom level')
color_bars      = input.bool  (        false, title = 'color bars?')
//}

// Main
//{
var int bias = 1
rsi = ta.rsi(src, len)

ha_open         = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, open)
ha_close        = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, close)
next_ha_open    = math.avg(ha_open, ha_close)
fut_smo_rsi     = ta.rsi(next_ha_open, 14)

rsi_val         = rsi_type == 'regular rsi' ? rsi : fut_smo_rsi

if ta.crossover(rsi_val, top_level)
    bias := 1
if ta.crossunder(rsi_val, bottom_level)
    bias := -1
//}


// Plots
//{
bias_line   = bias == 1 ? bottom_level : top_level
bias_color  = bias == 1 ? color.green : color.red

p1 = plot(bias_line, color = bias_color)
p2 = plot(rsi_val,   color = bias_color)
p3 = plot(bias ==  1 and rsi_val <= top_level    ? top_level    : na, style = plot.style_linebr, color = color.new(color.yellow, 60))
p4 = plot(bias == -1 and rsi_val >= bottom_level ? bottom_level : na, style = plot.style_linebr, color = color.new(color.yellow, 60))

fill(p1, p2, color = color.new(bias_color, 90))
fill(p3, p2, color = color.new(color.red, 90))
fill(p4, p2, color = color.new(color.green, 90))

bcol = bias == 1 ? rsi_val <= top_level ? color.yellow : color.green : rsi_val >= bottom_level ? color.maroon : color.red
barcolor(color_bars ? bcol : na)
//}

// Alerts
//{
long_switch     = bias ==  1 and bias[1] == -1
short_switch    = bias == -1 and bias[1] ==  1

if long_switch
    alert(message = "Long Bias", freq = alert.freq_once_per_bar)
if short_switch
    alert(message = "Short Bias", freq = alert.freq_once_per_bar)
//}
